package main

import (
	"log"
	"net/http"

	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	// generated by protoc-gen-go
	"go-grpc-connect/config"
	"go-grpc-connect/ent" // generated by protoc-gen-connect-go
	"go-grpc-connect/gen/user/v1/userv1connect"
	"go-grpc-connect/module/user"
	"go-grpc-connect/server"

	_ "github.com/lib/pq"
)

func main() {
	dbConfig := config.LoadDBConfig()
	client, err := ent.Open(config.DRIVER_NAME, dbConfig.ConnectionString())
	if err != nil {
		log.Fatalf("failed opening connection to db: %v", err)
	}
	defer client.Close()
	userRepository := user.NewUserRepository(client)
	userUseCase := user.NewUserUseCase(userRepository)
	userServer := server.NewUserServer(userUseCase)
	path, handler := userv1connect.NewUserServiceHandler(userServer)
	mux := http.NewServeMux()
	mux.Handle(path, handler)
	http.ListenAndServe(
		":8080",
		// Use h2c so we can serve HTTP/2 without TLS.
		h2c.NewHandler(mux, &http2.Server{}),
	)
}
